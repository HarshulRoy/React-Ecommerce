{"version":3,"file":"static/js/105.5f59945f.chunk.js","mappings":"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","sources":["components/FilterSection.js","components/GridView.js","components/ListView.js","components/ProductList.js","components/Sort.js","Products.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { useFilterContext } from \"../context/filter_context\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport FormatPrice from \"../Helpers/FormatPrice\";\r\nimport { Button } from \"../styles/Button\";\r\n\r\nconst FilterSection = () => {\r\n  const {\r\n    filters: { text, category, color, price, maxPrice, minPrice },\r\n    updateFilterValue,\r\n    all_products,\r\n    clearFilters,\r\n  } = useFilterContext();\r\n\r\n  // get the unique values of each property\r\n  const getUniqueData = (data, attr) => {\r\n    let newVal = data.map((curElem) => {\r\n      return curElem[attr];\r\n    });\r\n\r\n    if (attr === \"colors\") {\r\n      // return (newVal = [\"All\", ...new Set([].concat(...newVal))]);\r\n      newVal = newVal.flat();\r\n    }\r\n\r\n    return (newVal = [\"all\", ...new Set(newVal)]);\r\n  };\r\n\r\n  // we need to have the individual data of each in an array format\r\n  const categoryData = getUniqueData(all_products, \"category\");\r\n  const companyData = getUniqueData(all_products, \"company\");\r\n  const colorsData = getUniqueData(all_products, \"colors\");\r\n  // console.log(\r\n  //   \"ðŸš€ ~ file: FilterSection.js ~ line 23 ~ FilterSection ~ companyData\",\r\n  //   colorsData\r\n  // );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"filter-search\">\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            placeholder=\"Search\"\r\n            value={text}\r\n            onChange={updateFilterValue}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"filter-category\">\r\n        <h3>Category</h3>\r\n        <div>\r\n          {categoryData.map((curElem, index) => {\r\n            return (\r\n              <button\r\n                key={index}\r\n                type=\"button\"\r\n                name=\"category\"\r\n                value={curElem}\r\n                className={curElem === category ? \"active\" : \"\"}\r\n                onClick={updateFilterValue}>\r\n                {curElem}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"filter-company\">\r\n        <h3>Company</h3>\r\n\r\n        <form action=\"#\">\r\n          <select\r\n            name=\"company\"\r\n            id=\"company\"\r\n            className=\"filter-company--select\"\r\n            onClick={updateFilterValue}>\r\n            {companyData.map((curElem, index) => {\r\n              return (\r\n                <option key={index} value={curElem} name=\"company\">\r\n                  {curElem}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"filter-colors colors\">\r\n        <h3>Colors</h3>\r\n\r\n        <div className=\"filter-color-style\">\r\n          {colorsData.map((curColor, index) => {\r\n            if (curColor === \"all\") {\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  type=\"button\"\r\n                  value={curColor}\r\n                  name=\"color\"\r\n                  className=\"color-all--style\"\r\n                  onClick={updateFilterValue}>\r\n                  all\r\n                </button>\r\n              );\r\n            }\r\n            return (\r\n              <button\r\n                key={index}\r\n                type=\"button\"\r\n                value={curColor}\r\n                name=\"color\"\r\n                style={{ backgroundColor: curColor }}\r\n                className={color === curColor ? \"btnStyle active\" : \"btnStyle\"}\r\n                onClick={updateFilterValue}>\r\n                {color === curColor ? <FaCheck className=\"checkStyle\" /> : null}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"filter_price\">\r\n        <h3>Price</h3>\r\n        <p>\r\n          <FormatPrice price={price} />\r\n        </p>\r\n        <input\r\n          type=\"range\"\r\n          name=\"price\"\r\n          min={minPrice}\r\n          max={maxPrice}\r\n          value={price}\r\n          onChange={updateFilterValue}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"filter-clear\">\r\n        <Button className=\"btn\" onClick={clearFilters}>\r\n          Clear Filters\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 5rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n\r\n  h3 {\r\n    padding: 2rem 0;\r\n    font-size: bold;\r\n  }\r\n\r\n  .filter-search {\r\n    input {\r\n      padding: 0.6rem 1rem;\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  .filter-category {\r\n    div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n      gap: 1.4rem;\r\n\r\n      button {\r\n        border: none;\r\n        background-color: ${({ theme }) => theme.colors.white};\r\n        text-transform: capitalize;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n          color: ${({ theme }) => theme.colors.btn};\r\n        }\r\n      }\r\n\r\n      .active {\r\n        border-bottom: 1px solid #000;\r\n        color: ${({ theme }) => theme.colors.btn};\r\n      }\r\n    }\r\n  }\r\n\r\n  .filter-company--select {\r\n    padding: 0.3rem 1.2rem;\r\n    font-size: 1.6rem;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  .filter-color-style {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .color-all--style {\r\n    background-color: transparent;\r\n    text-transform: capitalize;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  .btnStyle {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    background-color: #000;\r\n    border-radius: 50%;\r\n    margin-left: 1rem;\r\n    border: none;\r\n    outline: none;\r\n    opacity: 0.5;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .active {\r\n    opacity: 1;\r\n  }\r\n\r\n  .checkStyle {\r\n    font-size: 1rem;\r\n    color: #fff;\r\n  }\r\n\r\n  .filter_price {\r\n    input {\r\n      margin: 0.5rem 0 1rem 0;\r\n      padding: 0;\r\n      box-shadow: none;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .filter-shipping {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n  }\r\n\r\n  .filter-clear .btn {\r\n    background-color: black;\r\n    color: white;\r\n    width:15rem;\r\n  }\r\n`;\r\n\r\nexport default FilterSection;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Product from \"./Product\";\r\n\r\nconst GridView = ({ products }) => {\r\n  return (\r\n    <Wrapper className=\"section\">\r\n      <div className=\"container grid grid-three-column\">\r\n        {products.map((curElem) => {\r\n          return <Product key={curElem.id} {...curElem} />;\r\n        })}\r\n      </div>\r\n    </Wrapper>\r\n  ); \r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 7rem 0;\r\n\r\n  .container {\r\n    max-width: 75rem;\r\n  }\r\n  .caption{\r\n    padding: 0.5rem 2rem;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  .grid {\r\n    gap: 3.2rem;\r\n  }\r\n\r\n  figure {\r\n    width: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: all 0.5s linear;\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 0%;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      transition: all 0.2s linear;\r\n      cursor: pointer;\r\n    }\r\n    &:hover::after {\r\n      width: 100%;\r\n    }\r\n    &:hover img {\r\n      transform: scale(1.2);\r\n    }\r\n    img {\r\n      max-width: 90%;\r\n      margin-top: 1.5rem;\r\n      height: 12.5rem;\r\n      transition: all 0.2s linear;\r\n    }\r\n    p{\r\n        font-size:1.4rem;\r\n        margin-bottom:0rem;\r\n    }\r\n  }\r\n\r\n  .card {\r\n    background-color: ${({ theme }) => theme.colors.bg};\r\n    border-radius: 1rem;\r\n\r\n    .card-data {\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .card-data-flex {\r\n      margin: 0.2rem 0;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n\r\n    .card-data--price {\r\n      color: ${({ theme }) => theme.colors.helper};\r\n    }\r\n\r\n    h3 {\r\n      color: ${({ theme }) => theme.colors.text};\r\n      text-transform: capitalize;\r\n      font-size:1.4rem;\r\n    }\r\n\r\n    .btn {\r\n      margin: 2rem auto;\r\n      background-color: rgb(0 0 0 / 0%);\r\n      border: 0.1rem solid rgb(98 84 243);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      &:hover {\r\n        background-color: rgb(98 84 243);\r\n      }\r\n\r\n      &:hover a {\r\n        color: #fff;\r\n      }\r\n      a {\r\n        color: rgb(98 84 243);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default GridView;","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport FormatPrice from \"../Helpers/FormatPrice\";\r\nimport { Button } from \"../styles/Button\";\r\n\r\nconst ListView = ({ products }) => {\r\n  return (\r\n    <Wrapper className=\"section\">\r\n      <div className=\"container grid\">\r\n        {products.map((curElem) => {\r\n          const { id, name, image, price, description } = curElem;\r\n          return (\r\n            <div className=\"card grid grid-two-column\">\r\n              <figure>\r\n                <img src={image} alt={name} />\r\n              </figure>\r\n\r\n              <div className=\"card-data\">\r\n                <h3>{name}</h3>\r\n                <p>\r\n                  <FormatPrice price={price} />\r\n                </p>\r\n                <p>{description.slice(0, 90)}...</p>\r\n\r\n                <NavLink to={`/singleproduct/${id}`} className=\"btn-main\">\r\n                  <Button className=\"btn\">Read More</Button>\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 7rem 4.9rem;\r\n\r\n  .container {\r\n    max-width: 120rem;\r\n  }\r\n\r\n  .grid {\r\n    gap: 3.2rem;\r\n  }\r\n\r\n  figure {\r\n    width: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: all 0.5s linear;\r\n    margin: 0 0 0;\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 0%;\r\n      height: 100%;\r\n      background-color: rgba(0, 0, 0, 0.5);\r\n      transition: all 0.2s linear;\r\n      cursor: pointer;\r\n    }\r\n    &:hover::after {\r\n      width: 100%;\r\n    }\r\n    &:hover img {\r\n      transform: scale(1.2);\r\n    }\r\n    img {\r\n      max-width: 90%;\r\n      height: 17rem;\r\n      transition: all 0.2s linear;\r\n      margin:1.5rem 0;\r\n    }\r\n  }\r\n  .grid{\r\n    gap:2.5rem;\r\n  }\r\n\r\n  .card {\r\n    border: 0.1rem solid rgb(170 170 170 / 40%);\r\n\r\n    .card-data {\r\n      padding: 0 2rem;\r\n    }\r\n\r\n    h3 {\r\n      margin: 1rem 0;\r\n      font-weight: 300;\r\n      font-size: 2.4rem;\r\n      text-transform: capitalize;\r\n    }\r\n\r\n    p{\r\n      line-height:2rem;\r\n      margin-bottom:1rem;\r\n      font-size:1.4rem;\r\n    }\r\n\r\n    .btn {\r\n      margin: 1rem 0;\r\n      background-color: rgb(0 0 0 / 0%);\r\n      border: 0.1rem solid rgb(98 84 243);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      color: rgb(98 84 243);\r\n\r\n      &:hover {\r\n        background-color: rgb(98 84 243);\r\n      }\r\n\r\n      &:hover a {\r\n        color: #fff;\r\n      }\r\n      a {\r\n        color: rgb(98 84 243);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n\r\n    .btn-main .btn:hover {\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ListView;","import React from 'react'\r\nimport { useFilterContext } from '../context/filter_context'\r\nimport GridView from \"./GridView\"\r\nimport ListView from './ListView'\r\n\r\nconst ProductList = () => {\r\n  const {filter_products, grid_view} = useFilterContext();\r\n\r\n  if(grid_view){\r\n    return <GridView products = {filter_products} />\r\n  }\r\n  if(!grid_view){\r\n    return <ListView products = {filter_products} />\r\n  }\r\n}\r\n\r\nexport default ProductList\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { BsFillGridFill, BsList } from \"react-icons/bs\";\r\nimport { useFilterContext } from \"../context/filter_context\";\r\n\r\nconst Sort = () => {\r\n  const { filter_products, grid_view, setGridView, setListView, sorting } =\r\n    useFilterContext();\r\n  return (\r\n    <Wrapper className=\"sort-section\">\r\n      {/* 1st column  */}\r\n      <div className=\"sorting-list--grid\">\r\n        <button\r\n          className={grid_view ? \"active sort-btn\" : \"sort-btn\"}\r\n          onClick={setGridView}>\r\n          <BsFillGridFill className=\"icon\" />\r\n        </button>\r\n\r\n        <button\r\n          className={!grid_view ? \"active sort-btn\" : \" sort-btn\"}\r\n          onClick={setListView}>\r\n          <BsList className=\"icon\" />\r\n        </button>\r\n      </div>\r\n      {/* 2nd column  */}\r\n      <div className=\"product-data\">\r\n        <p>{`${filter_products.length} Product Available`}</p>\r\n      </div>\r\n\r\n      {/* 3rd column  */}\r\n      <div className=\"sort-selection\">\r\n        <form action=\"#\">\r\n          <label htmlFor=\"sort\"></label>\r\n          <select\r\n            name=\"sort\"\r\n            id=\"sort\"\r\n            className=\"sort-selection--style\"\r\n            onClick={sorting}>\r\n            <option value=\"lowest\">Price(lowest)</option>\r\n            <option value=\"#\" disabled></option>\r\n            <option value=\"highest\">Price(highest)</option>\r\n            <option value=\"#\" disabled></option>\r\n            <option value=\"a-z\">Price(a-z)</option>\r\n            <option value=\"#\" disabled></option>\r\n            <option value=\"z-a\">Price(z-a)</option>\r\n          </select>\r\n        </form>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 5rem;\r\n  margin-inline:5.5rem;\r\n\r\n  .sorting-list--grid {\r\n    display: flex;\r\n    gap: 2rem;\r\n\r\n    .sort-btn {\r\n      padding: 0.8rem 1rem;\r\n      border: none;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .icon {\r\n      font-size: 1.6rem;\r\n    }\r\n    .active {\r\n      background-color: ${({ theme }) => theme.colors.black};\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  .sort-selection .sort-selection--style {\r\n    padding: 0.5rem;\r\n    cursor: pointer;\r\n\r\n    .sort-select--option {\r\n      padding: 0.5rem 0;\r\n      cursor: pointer;\r\n      height: 2rem;\r\n      padding: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Sort;","import styled from \"styled-components\";\r\nimport FilterSection from \"./components/FilterSection\";\r\nimport ProductList from \"./components/ProductList\";\r\nimport Sort from \"./components/Sort\";\r\n// import { useFilterContext } from \"./context/filter_context\";\r\n\r\nconst Products = () => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"container grid grid-filter-column\">\r\n        <div>\r\n          <FilterSection />\r\n        </div>\r\n\r\n        <section className=\"product-view--sort\">\r\n          <div className=\"sort-filter\">\r\n            <Sort />\r\n          </div>\r\n          <div className=\"main-product\">\r\n            <ProductList />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  .grid-filter-column {\r\n    grid-template-columns: 0.2fr 1fr;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.media.mobile}) {\r\n    .grid-filter-column {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Products;"],"names":["Wrapper","styled","section","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","white","_ref2","btn","_ref3","_ref4","text","FilterSection","filters","category","color","price","maxPrice","minPrice","updateFilterValue","all_products","clearFilters","useFilterContext","getUniqueData","data","attr","newVal","map","curElem","flat","Set","categoryData","companyData","colorsData","_jsxs","children","_jsx","className","onSubmit","e","preventDefault","type","name","placeholder","value","onChange","index","onClick","action","id","curColor","style","backgroundColor","FaCheck","FormatPrice","min","max","Button","bg","helper","products","Product","image","description","src","alt","slice","NavLink","to","concat","ProductList","filter_products","grid_view","GridView","ListView","black","Sort","setGridView","setListView","sorting","BsFillGridFill","BsList","length","htmlFor","disabled","media","mobile","Products"],"sourceRoot":""}